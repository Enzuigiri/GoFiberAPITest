kind: pipeline
type: docker
name: default

steps:
- name: Testing
  image: golang:1.20-alpine
  commands:
    - "go test -v"
    - "go test ../test -v"

- name: Build
  image: docker
  commands:
    - if ls | grep Dockerfile
    - then
    - if docker ps -a | grep api_golang
    - then
    - docker rm -f api_golang
    - docker build -t gowebapi .
    - docker run -itd -p 8000:8000 --name api_golang gowebapi
    - else
    - docker build -t gowebapi .
    - docker run -itd -p 8000:8000 --name api_golang gowebapi
    - fi
    - else
    - exit 1
    - fi
  volumes:
    - name: docker_sock
      path: /var/run/docker.sock

- name: notify-fail
  image: drillster/drone-email
  when:
    status:
      - failure
  settings:
    host: smtp.gmail.com
    username: 
      from_secret: email_username
    password: 
      from_secret: email_password
    recipients:
      - enzuao.08@gmail.com
      - habibsani123@gmail.com
      - ridwanrahman11@sma.belajar.id
    from: drone@your-domain.com
    subject: ${DRONE_BUILD_NUMBER} ${DRONE_REPO_LINK}
    body: ${DRONE_COMMIT} ${DRONE_COMMIT_BRANCH} ${DRONE_COMMIT_AUTHOR} ${DRONE_REPO_OWNER} ${DRONE_REPO_NAME} ${DRONE_COMMIT_AUTHOR_EMAIL} Fail
    

- name: notify-success
  image: drillster/drone-email
  when:
    status:
      - success
  settings:
    host: smtp.gmail.com
    username: 
      from_secret: email_username
    password: 
      from_secret: email_password
    recipients:
      - enzuao.08@gmail.com
      - habibsani123@gmail.com
      - ridwanrahman11@sma.belajar.id
    from: drone@your-domain.com
    subject: ${DRONE_BUILD_NUMBER} ${DRONE_REPO_LINK}
    body: ${DRONE_COMMIT} ${DRONE_COMMIT_BRANCH} ${DRONE_COMMIT_AUTHOR} ${DRONE_REPO_OWNER} ${DRONE_REPO_NAME} ${DRONE_COMMIT_AUTHOR_EMAIL} Success
    
volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock